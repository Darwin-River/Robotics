{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 SitkaText;}{\f1\fnil\fcharset0\fprq2 Consolas;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;\red128\green128\blue128;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\f0\fs36\cf0
\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\ltrch\loch {\f0\fs36\b0\i0 The line following robot used in this challenge only requires a chassis and two wheels, which are described here.}
\par\pard\plain \tx720\tx1080\tx1440\tx1800\tx2160\li720\ltrch\loch {\f1\fs22\b0\i0 <$Scr_Ps::0>}
\par\plain {\f1\fs22\b0\i0 // Variables}
\par\plain {\f1\fs22\b0\i0 // All measurements are given in mm.}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 cbLength = 54.1;}
\par\plain {\f1\fs22\b0\i0 cbWidth = 1.75;}
\par\plain {\f1\fs22\b0\i0 cbHeight = 58;}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 servoLength = 22.6;}
\par\plain {\f1\fs22\b0\i0 servoWidth = 12.5;}
\par\plain {\f1\fs22\b0\i0 servoHeight = 17.5;}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 servoWireWidth = 4.6;}
\par\plain {\f1\fs22\b0\i0 servoTerminalWidth = 10;}
\par\plain {\f1\fs22\b0\i0 servoTabThickness = 2.55;}
\par\plain {\f1\fs22\b0\i0 servoTabLength = 32.25;}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 baseLength = 60;}
\par\plain {\f1\fs22\b0\i0 baseHeight = 60;}
\par\plain {\f1\fs22\b0\i0 baseWidth = servoTabLength;}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 batteryLength = 91.5;}
\par\plain {\f1\fs22\b0\i0 batteryWidth =15;}
\par\plain {\f1\fs22\b0\i0 batteryHight = 58.5;}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 // Execute}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 rotate([90,0,0]) difference() \{}
\par\plain {\f1\fs22\b0\i0     base();}
\par\plain {\f1\fs22\b0\i0     translate([0,0,baseHeight-10]) rotate([90,0,0]) cbCutout();}
\par\plain {\f1\fs22\b0\i0     translate([-baseLength/2,0,baseHeight/2]) rotate([0,90,0]) rotate([0,0,90]) servoCutout();}
\par\plain {\f1\fs22\b0\i0     translate([baseLength/2,0,baseHeight/2]) rotate([0,-90,0]) rotate([0,0,-90]) servoCutout();}
\par\plain {\f1\fs22\b0\i0 \}}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 // Modules}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 module newCube(dim, off, loc, rot) \{}
\par\plain {\f1\fs22\b0\i0     translate(loc)}
\par\plain {\f1\fs22\b0\i0     rotate(rot)}
\par\plain {\f1\fs22\b0\i0         translate(off)}
\par\plain {\f1\fs22\b0\i0             cube(dim);}
\par\plain {\f1\fs22\b0\i0 \}}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 module base() \{}
\par\plain {\f1\fs22\b0\i0     translate([0,0,baseHeight/2])}
\par\plain {\f1\fs22\b0\i0         cube([baseLength, baseWidth, baseHeight], true);}
\par\plain {\f1\fs22\b0\i0 \}}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 module cbCutout() \{}
\par\plain {\f1\fs22\b0\i0     translate([0, 0, 0]) cube([cbLength, cbWidth, cbHeight], true);}
\par\plain {\f1\fs22\b0\i0 \}}
\par\plain \f1\fs22\b0\i0
\par\plain {\f1\fs22\b0\i0 module servoCutout() \{}
\par\plain {\f1\fs22\b0\i0     translate([0, 0, servoHeight/2 + servoTabThickness])}
\par\plain {\f1\fs22\b0\i0     union() \{}
\par\plain {\f1\fs22\b0\i0         cube([servoLength, servoWidth, servoHeight], true);}
\par\plain {\f1\fs22\b0\i0         cube([servoLength + 5, servoWireWidth, servoHeight], true);}
\par\plain {\f1\fs22\b0\i0         translate([0,0,-(servoHeight+servoTabThickness)/2])}
\par\plain {\f1\fs22\b0\i0             cube([servoTabLength, servoWidth, servoTabThickness], true);}
\par\plain {\f1\fs22\b0\i0         translate([0,0,servoHeight/2])}
\par\plain {\f1\fs22\b0\i0             rotate([0,90,0])}
\par\plain {\f1\fs22\b0\i0                 cylinder(h=100, r=servoTerminalWidth/2, center=true);}
\par\plain {\f1\fs22\b0\i0     \}}
\par\plain {\f1\fs22\b0\i0 \}<!$Scr_Ps::0>}}